import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { MapPin, Phone, Mail, Clock, Send, Sparkles, ArrowRight, Calendar, MessageSquare, User, Building } from 'lucide-react';
import SidebarNav from '../components/Nav/SidebarNav';
import MobileBurger from '../components/Nav/MobileBurger';
import Footer from '../components/Footer';

export default function Contact() {
  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    email: '',
    phone: '',
    company: '',
    service: '',
    message: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isSubmitted, setIsSubmitted] = useState(false);
  const [activeField, setActiveField] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    // Simuler l'envoi
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    setIsSubmitting(false);
    setIsSubmitted(true);
    
    // Reset après 3 secondes
    setTimeout(() => {
      setIsSubmitted(false);
      setFormData({
        firstName: '',
        lastName: '',
        email: '',
        phone: '',
        company: '',
        service: '',
        message: ''
      });
    }, 3000);
  };

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  return (
    <div className="min-h-screen bg-black">
      <SidebarNav />
      <MobileBurger />
      
      <main className="lg:ml-[260px]">
        {/* Hero Section avec animation 3D */}
        <section className="relative min-h-[50vh] flex items-center justify-center overflow-hidden">
          {/* Background animé */}
          <div className="absolute inset-0">
            <div className="absolute inset-0 bg-gradient-to-br from-purple-900/20 via-black to-pink-900/20"></div>
            
            {/* Orbes flottants */}
            {[...Array(3)].map((_, i) => (
              <motion.div
                key={i}
                className="absolute w-96 h-96 rounded-full"
                style={{
                  background: `radial-gradient(circle, ${['#a855f7', '#ec4899', '#3b82f6'][i]}20 0%, transparent 70%)`,
                  left: `${20 + i * 30}%`,
                  top: `${-10 + i * 20}%`,
                }}
                animate={{
                  x: [0, 50, 0],
                  y: [0, -30, 0],
                  scale: [1, 1.2, 1],
                }}
                transition={{
                  duration: 10 + i * 2,
                  repeat: Infinity,
                  ease: "easeInOut",
                }}
              />
            ))}

            {/* Grille 3D */}
            <div 
              className="absolute inset-0 opacity-20"
              style={{
                backgroundImage: 'linear-gradient(rgba(255,255,255,0.1) 1px, transparent 1px), linear-gradient(90deg, rgba(255,255,255,0.1) 1px, transparent 1px)',
                backgroundSize: '50px 50px'
              }}
            ></div>
          </div>

          {/* Contenu */}
          <div className="relative z-10 text-center px-8 max-w-5xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
            >
              <h1 className="text-6xl md:text-7xl lg:text-8xl font-black mb-6">
                <span className="text-white">Parlons de</span>
                <br />
                <span className="text-transparent bg-clip-text bg-gradient-to-r from-purple-400 via-pink-400 to-orange-400">
                  votre projet
                </span>
              </h1>
              <p className="text-xl md:text-2xl text-white/60 font-light">
                Notre équipe est là pour vous accompagner dans votre réussite
              </p>
            </motion.div>
          </div>

          {/* Scroll indicator */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 1 }}
            className="absolute bottom-10 left-1/2 -translate-x-1/2"
          >
            <motion.div
              animate={{ y: [0, 10, 0] }}
              transition={{ duration: 2, repeat: Infinity }}
              className="w-6 h-10 border-2 border-white/30 rounded-full flex justify-center"
            >
              <motion.div
                animate={{ y: [2, 8, 2] }}
                transition={{ duration: 2, repeat: Infinity }}
                className="w-1 h-3 bg-white/50 rounded-full mt-2"
              />
            </motion.div>
          </motion.div>
        </section>

        {/* Section Contact principale */}
        <section className="relative py-20">
          <div className="max-w-7xl mx-auto px-8">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-16">
              {/* Formulaire */}
              <motion.div
                initial={{ opacity: 0, x: -30 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6 }}
              >
                <div className="mb-8">
                  <h2 className="text-4xl font-bold text-white mb-4">
                    Envoyez-nous un message
                  </h2>
                  <p className="text-white/60">
                    Remplissez le formulaire et nous vous recontacterons dans les 24h
                  </p>
                </div>

                <form onSubmit={handleSubmit} className="space-y-6">
                  {/* Nom et Prénom */}
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <motion.div
                      whileHover={{ scale: 1.02 }}
                      className="relative"
                    >
                      <input
                        type="text"
                        name="firstName"
                        required
                        value={formData.firstName}
                        onChange={handleChange}
                        onFocus={() => setActiveField('firstName')}
                        onBlur={() => setActiveField('')}
                        className="w-full px-6 py-4 bg-white/5 border-2 border-white/10 rounded-2xl text-white placeholder-white/30 focus:border-purple-500 focus:bg-white/10 transition-all duration-300"
                        placeholder="Prénom *"
                      />
                      <User className={`absolute right-4 top-4 w-5 h-5 transition-colors duration-300 ${
                        activeField === 'firstName' ? 'text-purple-400' : 'text-white/30'
                      }`} />
                    </motion.div>

                    <motion.div
                      whileHover={{ scale: 1.02 }}
                      className="relative"
                    >
                      <input
                        type="text"
                        name="lastName"
                        required
                        value={formData.lastName}
                        onChange={handleChange}
                        onFocus={() => setActiveField('lastName')}
                        onBlur={() => setActiveField('')}
                        className="w-full px-6 py-4 bg-white/5 border-2 border-white/10 rounded-2xl text-white placeholder-white/30 focus:border-purple-500 focus:bg-white/10 transition-all duration-300"
                        placeholder="Nom *"
                      />
                      <User className={`absolute right-4 top-4 w-5 h-5 transition-colors duration-300 ${
                        activeField === 'lastName' ? 'text-purple-400' : 'text-white/30'
                      }`} />
                    </motion.div>
                  </div>

                  {/* Email et Téléphone */}
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <motion.div
                      whileHover={{ scale: 1.02 }}
                      className="relative"
                    >
                      <input
                        type="email"
                        name="email"
                        required
                        value={formData.email}
                        onChange={handleChange}
                        onFocus={() => setActiveField('email')}
                        onBlur={() => setActiveField('')}
                        className="w-full px-6 py-4 bg-white/5 border-2 border-white/10 rounded-2xl text-white placeholder-white/30 focus:border-purple-500 focus:bg-white/10 transition-all duration-300"
                        placeholder="Email *"
                      />
                      <Mail className={`absolute right-4 top-4 w-5 h-5 transition-colors duration-300 ${
                        activeField === 'email' ? 'text-purple-400' : 'text-white/30'
                      }`} />
                    </motion.div>

                    <motion.div
                      whileHover={{ scale: 1.02 }}
                      className="relative"
                    >
                      <input
                        type="tel"
                        name="phone"
                        value={formData.phone}
                        onChange={handleChange}
                        onFocus={() => setActiveField('phone')}
                        onBlur={() => setActiveField('')}
                        className="w-full px-6 py-4 bg-white/5 border-2 border-white/10 rounded-2xl text-white placeholder-white/30 focus:border-purple-500 focus:bg-white/10 transition-all duration-300"
                        placeholder="Téléphone"
                      />
                      <Phone className={`absolute right-4 top-4 w-5 h-5 transition-colors duration-300 ${
                        activeField === 'phone' ? 'text-purple-400' : 'text-white/30'
                      }`} />
                    </motion.div>
                  </div>

                  {/* Entreprise et Service */}
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <motion.div
                      whileHover={{ scale: 1.02 }}
                      className="relative"
                    >
                      <input
                        type="text"
                        name="company"
                        value={formData.company}
                        onChange={handleChange}
                        onFocus={() => setActiveField('company')}
                        onBlur={() => setActiveField('')}
                        className="w-full px-6 py-4 bg-white/5 border-2 border-white/10 rounded-2xl text-white placeholder-white/30 focus:border-purple-500 focus:bg-white/10 transition-all duration-300"
                        placeholder="Entreprise"
                      />
                      <Building className={`absolute right-4 top-4 w-5 h-5 transition-colors duration-300 ${
                        activeField === 'company' ? 'text-purple-400' : 'text-white/30'
                      }`} />
                    </motion.div>

                    <motion.div
                      whileHover={{ scale: 1.02 }}
                      className="relative"
                    >
                      <select
                        name="service"
                        required
                        value={formData.service}
                        onChange={handleChange}
                        onFocus={() => setActiveField('service')}
                        onBlur={() => setActiveField('')}
                        className="w-full px-6 py-4 bg-white/5 border-2 border-white/10 rounded-2xl text-white focus:border-purple-500 focus:bg-white/10 transition-all duration-300 appearance-none cursor-pointer"
                      >
                        <option value="" className="bg-gray-900">Service d'intérêt *</option>
                        <option value="bureaux" className="bg-gray-900">Bureaux privés</option>
                        <option value="coworking" className="bg-gray-900">Espace coworking</option>
                        <option value="domiciliation" className="bg-gray-900">Domiciliation</option>
                        <option value="salles" className="bg-gray-900">Salles de réunion</option>
                        <option value="studio" className="bg-gray-900">Studio de production</option>
                        <option value="visite" className="bg-gray-900">Visite des locaux</option>
                      </select>
                      <ArrowRight className={`absolute right-4 top-4 w-5 h-5 rotate-90 transition-all duration-300 pointer-events-none ${
                        activeField === 'service' ? 'text-purple-400' : 'text-white/30'
                      }`} />
                    </motion.div>
                  </div>

                  {/* Message */}
                  <motion.div
                    whileHover={{ scale: 1.02 }}
                    className="relative"
                  >
                    <textarea
                      name="message"
                      required
                      rows={5}
                      value={formData.message}
                      onChange={handleChange}
                      onFocus={() => setActiveField('message')}
                      onBlur={() => setActiveField('')}
                      className="w-full px-6 py-4 bg-white/5 border-2 border-white/10 rounded-2xl text-white placeholder-white/30 focus:border-purple-500 focus:bg-white/10 transition-all duration-300 resize-none"
                      placeholder="Votre message *"
                    />
                    <MessageSquare className={`absolute right-4 top-4 w-5 h-5 transition-colors duration-300 ${
                      activeField === 'message' ? 'text-purple-400' : 'text-white/30'
                    }`} />
                  </motion.div>

                  {/* Submit Button */}
                  <motion.button
                    type="submit"
                    disabled={isSubmitting || isSubmitted}
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                    className="relative w-full overflow-hidden rounded-2xl bg-gradient-to-r from-purple-600 to-pink-600 p-[2px] group"
                  >
                    <div className="relative bg-black rounded-2xl px-8 py-5 group-hover:bg-transparent transition-all duration-300">
                      <AnimatePresence mode="wait">
                        {isSubmitting ? (
                          <motion.div
                            key="submitting"
                            initial={{ opacity: 0 }}
                            animate={{ opacity: 1 }}
                            exit={{ opacity: 0 }}
                            className="flex items-center justify-center gap-3"
                          >
                            <motion.div
                              animate={{ rotate: 360 }}
                              transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
                              className="w-5 h-5 border-2 border-white border-t-transparent rounded-full"
                            />
                            <span className="text-white font-semibold">Envoi en cours...</span>
                          </motion.div>
                        ) : isSubmitted ? (
                          <motion.div
                            key="submitted"
                            initial={{ opacity: 0, scale: 0.8 }}
                            animate={{ opacity: 1, scale: 1 }}
                            exit={{ opacity: 0 }}
                            className="flex items-center justify-center gap-3"
                          >
                            <motion.div
                              initial={{ scale: 0 }}
                              animate={{ scale: 1 }}
                              transition={{ type: "spring", stiffness: 200 }}
                              className="w-6 h-6 bg-green-500 rounded-full flex items-center justify-center"
                            >
                              <motion.div
                                initial={{ opacity: 0, scale: 0 }}
                                animate={{ opacity: 1, scale: 1 }}
                                transition={{ delay: 0.2 }}
                                className="w-3 h-3 bg-white rounded-full"
                              />
                            </motion.div>
                            <span className="text-white font-semibold">Message envoyé !</span>
                          </motion.div>
                        ) : (
                          <motion.div
                            key="default"
                            initial={{ opacity: 0 }}
                            animate={{ opacity: 1 }}
                            exit={{ opacity: 0 }}
                            className="flex items-center justify-center gap-3"
                          >
                            <Send className="w-5 h-5 text-white" />
                            <span className="text-white font-semibold text-lg">Envoyer le message</span>
                            <Sparkles className="w-4 h-4 text-white/60" />
                          </motion.div>
                        )}
                      </AnimatePresence>
                    </div>
                  </motion.button>
                </form>
              </motion.div>

              {/* Informations de contact */}
              <motion.div
                initial={{ opacity: 0, x: 30 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6 }}
                className="space-y-8"
              >
                {/* Contact Cards */}
                <div className="space-y-6">
                  {[
                    {
                      icon: MapPin,
                      title: "Adresse",
                      content: "40 Rue de la République\n13001 Marseille",
                      color: "from-purple-600 to-pink-600",
                      action: "Voir sur Maps",
                      link: "https://maps.google.com"
                    },
                    {
                      icon: Phone,
                      title: "Téléphone",
                      content: "+33 4 91 XX XX XX",
                      color: "from-blue-600 to-cyan-600",
                      action: "Appeler maintenant",
                      link: "tel:+33491XXXXXX"
                    },
                    {
                      icon: Mail,
                      title: "Email",
                      content: "contact@le40-marseille.fr",
                      color: "from-orange-600 to-red-600",
                      action: "Envoyer un email",
                      link: "mailto:contact@le40-marseille.fr"
                    },
                    {
                      icon: Clock,
                      title: "Horaires",
                      content: "Lun - Ven : 8h00 - 20h00\nSam : 9h00 - 17h00",
                      color: "from-green-600 to-emerald-600",
                      action: "Planifier une visite",
                      link: "#"
                    }
                  ].map((info, index) => (
                    <motion.div
                      key={index}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 }}
                      whileHover={{ scale: 1.02, y: -5 }}
                      className="relative group"
                    >
                      <div className="absolute inset-0 bg-gradient-to-r from-purple-600/20 to-pink-600/20 rounded-3xl blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                      <div className="relative bg-white/5 backdrop-blur-sm border border-white/10 rounded-3xl p-6 hover:bg-white/10 hover:border-white/20 transition-all duration-300">
                        <div className="flex items-start gap-4">
                          <div className={`w-14 h-14 bg-gradient-to-br ${info.color} rounded-2xl flex items-center justify-center flex-shrink-0`}>
                            <info.icon className="w-7 h-7 text-white" />
                          </div>
                          <div className="flex-1">
                            <h3 className="text-lg font-semibold text-white mb-2">{info.title}</h3>
                            <p className="text-white/70 whitespace-pre-line mb-3">{info.content}</p>
                            
                              href={info.link}
                              className="inline-flex items-center gap-2 text-sm text-purple-400 hover:text-purple-300 transition-colors"
                            >
                              {info.action}
                              <ArrowRight className="w-4 h-4" />
                            </a>
                          </div>
                        </div>
                      </div>
                    </motion.div>
                  ))}
                </div>

                {/* Map Preview */}
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.5 }}
                  className="relative overflow-hidden rounded-3xl bg-white/5 border border-white/10 p-1"
                >
                  <div className="aspect-video bg-gray-900 rounded-2xl flex items-center justify-center">
                    <div className="text-center">
                      <MapPin className="w-12 h-12 text-purple-400 mx-auto mb-4" />
                      <p className="text-white/60">
                        Carte interactive à intégrer
                      </p>
                    </div>
                  </div>
                  <motion.div
                    className="absolute inset-0 bg-gradient-to-r from-purple-600/20 via-transparent to-pink-600/20"
                    animate={{
                      x: [-200, 200],
                    }}
                    transition={{
                      duration: 3,
                      repeat: Infinity,
                      repeatDelay: 1,
                    }}
                  />
                </motion.div>
              </motion.div>
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="relative py-20 overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-r from-purple-900/20 via-black to-pink-900/20"></div>
          
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="relative max-w-4xl mx-auto px-8 text-center"
          >
            <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
              Prêt à transformer votre façon de travailler ?
            </h2>
            <p className="text-xl text-white/60 mb-10">
              Rejoignez une communauté d'entrepreneurs ambitieux
            </p>
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="inline-flex items-center gap-3 px-8 py-4 bg-gradient-to-r from-purple-600 to-pink-600 text-white font-semibold rounded-2xl hover:shadow-lg hover:shadow-purple-500/25 transition-all duration-300"
            >
              <Calendar className="w-5 h-5" />
              Réserver une visite
              <ArrowRight className="w-5 h-5" />
            </motion.button>
          </motion.div>
        </section>
      </main>
      
      <Footer />
    </div>
  );
}